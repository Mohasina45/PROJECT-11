// Add initial vehicles (using polymorphism)
        system.addVehicle(new Car("C001", "Toyota Corolla", 40));
        system.addVehicle(new Car("C002", "Honda Civic", 50));
        system.addVehicle(new Car("C003", "Ford Mustang", 100));
        // You could add other Vehicle types here later, e.g., system.addVehicle(new Truck(...));

        // Add some initial customers (optional)
        system.addCustomer(new Customer("CUST1", "Alice Wonderland"));
        system.addCustomer(new Customer("CUST2", "Bob The Builder"));


        while (true) {
            System.out.println("\n========= Vehicle Rental System =========");
            System.out.println("1. Display Available Vehicles");
            System.out.println("2. Rent a Vehicle");
            System.out.println("3. Return a Vehicle");
            System.out.println("4. Display Customer Rental History");
            System.out.println("5. Display All Customers");
            System.out.println("6. Exit");
            System.out.println("========================================");
            System.out.print("Choose an option: ");

            int choice = -1;
            try {
                 choice = Integer.parseInt(scanner.nextLine()); // Read as string and parse
            } catch (NumberFormatException e) {
                System.out.println("Invalid input. Please enter a number.");
                continue; // Skip the rest of the loop
            }


            switch (choice) {
                case 1:
                    system.displayAvailableVehicles();
                    break;
                case 2:
                    System.out.print("Enter Customer ID (e.g., CUST1 or enter a new ID): ");
                    String customerIdRent = scanner.nextLine();
                    System.out.print("Enter Vehicle ID to rent (e.g., C001): ");
                    String vehicleIdRent = scanner.nextLine();
                    System.out.print("Enter number of rental days: ");
                    int days = -1;
                     try {
                        days = Integer.parseInt(scanner.nextLine());
                        if(days <= 0) {
                            System.out.println("Error: Number of days must be positive.");
                            break;
                        }
                    } catch (NumberFormatException e) {
                        System.out.println("Invalid input for days. Please enter a number.");
                        break;
                    }
                    system.rentVehicle(vehicleIdRent, customerIdRent, days, scanner); // Pass scanner for potential new customer name
                    break;
                case 3:
                    System.out.print("Enter Vehicle ID to return: ");
                    String returnVehicleId = scanner.nextLine();
                    system.returnVehicle(returnVehicleId);
                    break;
                case 4:
                     System.out.print("Enter Customer ID to view history: ");
                     String custIdHistory = scanner.nextLine();
                     system.displayCustomerHistory(custIdHistory);
                    break;
                 case 5:
                     system.displayAllCustomers();
                     break;
                case 6:
                    System.out.println("Exiting Vehicle Rental System. Thank you!");
                    scanner.close();
                    return; // Exit the program
                default:
                    System.out.println("Invalid choice! Please choose between 1 and 6.");
            }
            System.out.println("\nPress Enter to continue...");
            scanner.nextLine(); // Pause for user to read output
        }
    }
}
